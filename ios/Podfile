require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print “require.resolve(‘react-native/package.json’)“`), “scripts/react_native_pods”)
require File.join(File.dirname(`node --print “require.resolve(‘@react-native-community/cli-platform-ios/package.json’)“`), “native_modules”)

require ‘json’

# Manual Pods
pod 'react-native-orientation', :path => '../node_modules/react-native-orientation'
# pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'

podfile_properties = JSON.parse(File.read(File.join(__dir__, ‘Podfile.properties.json’))) rescue {}
platform :ios, podfile_properties[‘ios.deploymentTarget’] || ‘12.4’
install! ‘cocoapods’, :deterministic_uuids => false

target 'KidzNMotionNative' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!
  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'KidzNMotionNativeTests' do
    inherit! :complete

    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    ################### ADD THE FOLLOWING #########################
    installer.pods_project.targets.each do |target|
      if target.name == "React-Core.common-AccessibilityResources"
        target.remove_from_project
      end
    end
    ###############################################################


  end
end
